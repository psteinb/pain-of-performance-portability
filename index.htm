<!DOCTYPE html>
<html>
  <head>
    <meta charset="utf-8">
    <meta name="generator" content="pandoc">
        <meta name="author" content="Peter Steinbach" />
            <title>Compression and the pain of performance portability</title>
    <meta name="description" content="Compression and the pain of performance portability">
    <meta name="apple-mobile-web-app-capable" content="yes" />
    <meta name="apple-mobile-web-app-status-bar-style" content="black-translucent" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=1.0, user-scalable=no">
    <!-- Bootstrap core CSS -->
    <link rel="stylesheet" href="css/bootstrap.min.css"/>
    
    <link rel="stylesheet" href="css/reveal.css"/>
        <link rel="stylesheet" href="css/theme/black.css">
    
        <link rel="stylesheet" href="lib/css/zenburn.css">
    
    <link rel="stylesheet" href="css/my_reveal_overrides.css" id="theme">
    <!-- <link rel="stylesheet" href="my_reveal_overrides.css"/> -->
    
    <!-- If the query includes 'print-pdf', include the PDF print sheet -->
    <script>
      	var link = document.createElement( 'link' );
		link.rel = 'stylesheet';
		link.type = 'text/css';
		link.href = window.location.search.match( /print-pdf/gi ) ? 'css/print/pdf.css' : 'css/print/paper.css';
		document.getElementsByTagName( 'head' )[0].appendChild( link );
    </script>
    <!--[if lt IE 9]>
	<script src="reveal.js/lib/js/html5shiv.js"></script>
	<![endif]-->
          </head>
  <body>
        <div class="reveal">
      <div class="slides">

		<section>
	  <h1 class="title">Compression and the pain of performance portability</h1>
	  	  <p>
	    <b>Peter Steinbach</b><br>
	    <emph>(Scionics Computer Innovation GmbH)</emph><br>
	    <a href="mailto:steinbach@scionics.de">steinbach@scionics.de</a>, <a href="https://twitter.com/psteinb_">@psteinb_</a>
	    <br><br>
	  </p>
	  
	  <h3 class="date">May 16, 2018, Advanced Developers Conference (Burghausen)</h3>
	</section>
		
	<section><section id="agenda" class="titleslide slide level1 unnumbered"><h1>Agenda</h1></section><section id="agenda" class="slide level2" style="font-size: 1.5em">
<h2>For the next 60 Minutes ...</h2>
<ol type="1">
<li>Peter who?</li>
<li>3D Microscopy</li>
<li>Compression</li>
<li>Sqeazy</li>
<li>Portable Performance</li>
</ol>
</section><section id="disclaimer" class="slide level2">
<h2>Disclaimer</h2>
<div class="container-fluid">
<div class="row justify-content-center">
<div class="col">
<figure>
<img src="img/opensource-550x475.png" class="figure-img img-fluid" style="width:40.0%" />
</figure>
<p><strong><a href="https://github.com/psteinb/pain-of-performance-portability">github.com/psteinb/pain-of-performance-portability</a></strong></p>
</div>
</div>
</div>
<aside class="notes">
<p>report bugs and questions there!</p>
</aside>
</section></section>
<section><section id="about-me" class="titleslide slide level1"><h1>About me</h1></section><section id="scionics-computer-innovation-gmbh" class="slide level2">
<h2><a href="https://www.scionics.de">Scionics Computer Innovation GmbH</a></h2>
<p> </p>
<div class="container-fluid">
<div class="row align-items-center">
<div class="col">
<figure>
<img src="img/scionics_main_logo.png" class="figure-img img-fluid" style="width:70.0%" />
</figure>
</div>
<div class="col">
<ul>
<li>founded in 2001</li>
<li>located in Dresden, Saxony (Germany)</li>
<li>currently 35 staff</li>
<li>consulting and software products for industry and academia</li>
</ul>
</div>
</div>
</div>
<p> </p>
<p>Need Help with Data Analysis, Machine Learning, Parallelisation or Performance Engineering ?<br />
<a href="mailto:steinbach@scionics.de">Get in Touch!</a></p>
</section><section id="max-planck-institute-for-molecular-cell-biology-and-genetics" class="slide level2">
<h2>Max-Planck Institute for Molecular Cell Biology and Genetics</h2>
<div class="container-fluid">
<div class="row align-items-center">
<div class="col">
<figure>
<img src="img/800px-MPI-CBG_building_outside_4pl.jpg" class="figure-img img-fluid" style="height:50.0%" />
</figure>
<p><a href="https://www.mpi-cbg.de">Max Planck Institute of Molecular Cell Biology and Genetics</a> (MPI CBG), 500 staff</p>
</div>
<div class="col">
<figure>
<img src="img/csbdbuilding.jpg" class="figure-img img-fluid" style="height:50.0%" />
</figure>
<p><a href="http://www.csbdresden.de/">Center for Systems Biology</a>, (CSBD) 150 staff</p>
</div>
</div>
</div>
<aside class="notes">
<ul>
<li>employer = Scionics</li>
<li>NEXT: my role</li>
</ul>
</aside>
</section><section id="my-role" class="slide level2">
<h2>My Role</h2>
<div class="container-fluid">
<div class="row align-items-center">
<div class="col">
<p>HPC</p>
<figure>
<img src="img/madmax_high_800h.jpg" class="figure-img img-fluid" />
</figure>
</div>
<div class="col">
<p>Performance</p>
<p><img src="img/premature-optimisation.png" class="figure-img img-fluid" /><br />
by <a href="http://ithare.com/c-performance-common-wisdoms-and-common-wisdoms/">Sergey Ignatchenko</a></p>
</div>
</div>
</div>
</section></section>
<section><section id="d-microscopy" class="titleslide slide level1"><h1>3D Microscopy</h1></section><section id="selective-plane-illumination" class="slide level2">
<h2>Selective Plane Illumination</h2>
<figure>
<img src="img/Spim_prinziple_en.svg" alt="CC SA 3.0 by JKrieger" class="img-fluid" style="width: 70%;" /><figcaption>CC SA 3.0 by <a href="https://commons.wikimedia.org/wiki/File:Spim_prinziple_en.svg">JKrieger</a></figcaption>
</figure>
</section><section id="living-embryo-development" class="slide level2">
<h2>Living Embryo Development</h2>
<video width="1400" poster="video/Drosophila_Embryogenesis_beads_removed.png" controls loop>
<source src="video/Drosophila_Embryogenesis_beads_removed.webm" type='video/webm; codecs="vp8.0, vorbis"'>
<source src="video/Drosophila_Embryogenesis_beads_removed.mp4" type='video/mp4'>
<p>
Movie does not work! Sorry!
</p>
</video>
<p>from <a href="http://openspim.org/Gallery">openSPIM</a></p>
</section><section id="living-organism" class="slide level2">
<h2>Living Organism</h2>
<video width="1400" poster="video/developing-drosophila-neuronal-cells.png" controls loop>
<source src="video/developing-drosophila-neuronal-cells.webm" type='video/webm; codecs="vp8.0, vorbis"'>
<!-- <source src="video/Drosophila_Embryogenesis_beads_removed.mp4" type='video/mp4'> -->
<p>
Movie does not work! Sorry!
</p>
</video>
<p>from <a href="http://dev.biologists.org/content/142/5/1016">A. Bassi et al, Optical tomography complements light sheet microscopy for in toto imaging of zebrafish development</a></p>
</section><section id="innovation-challenges" class="slide level2">
<h2>Innovation = Challenges</h2>
<div class="container-fluid">
<div class="row align-items-top">
<div class="col">
<p>Commercial : <a href="https://www.zeiss.com/microscopy/us/products/imaging-systems/lightsheet-z-1.html">Zeiss Lightsheet Z1</a></p>
</div>
<div class="col">
<p>Custom : <a href="https://www.mpi-cbg.de/research-groups/current-groups/gene-myers/projects/microscope-development/">Xscope</a> by Nicola Maghelli et al (MPI CBG)</p>
</div>
</div>
</div>
<div class="container-fluid">
<div class="row align-items-center">
<div class="col">
<figure>
<img src="img/Zeiss_Lightsheet_Z1_600p-cropped.jpg" class="img-fluid" style="width: 90%;" />
</figure>
</div>
<div class="col">
<figure>
<img src="img/xscope_schematic.png" class="img-fluid" style="width: 90%;" />
</figure>
</div>
</div>
</div>
<div class="container-fluid">
<div class="row align-items-top">
<div class="col">
<p><span class="class fragment highlight-green" style="font-size: 1.5em">120-240 MB/s for 24/7</span></p>
</div>
<div class="col">
<p><span class="class fragment highlight-red" style="font-size: 1.5em">500-1024 MB/s for 24/7</span></p>
</div>
</div>
</div>
<aside class="notes">
<ul>
<li>custom: 48-86 TB/day</li>
<li>custom: 1.2-2.5 PB/month</li>
</ul>
</aside>
</section><section id="big-data" class="slide level2" data-background-image="img/1280px-Panic_button.jpg">
<h2>Big Data!</h2>
<p>by <a href="https://commons.wikimedia.org/wiki/File:Panic_button.jpg">John</a>, CC BY-SA 2.0</p>
</section></section>
<section><section id="compression" class="titleslide slide level1"><h1>Compression</h1></section><section id="lempelzivwelch-algorithm" class="slide level2">
<h2>Lempel–Ziv–Welch Algorithm</h2>
<ul>
<li>dictionary based losslessl compression</li>
<li>at the heart of many compression algorithms today</li>
<li>DEFLATE = LZW + huffman encoding</li>
<li>ZIP, PNG, TIFF ...</li>
</ul>
</section><section id="example" class="slide level2">
<h2>Example</h2>
<pre><code style="font-size: 1.25em">
TOBEORNOTTOBEORTOBEORNOT#
</code></pre>
<div class="fragment">
<p> </p>
<div class="container-fluid">
<div class="row align-items-top">
<div class="col">
<ul>
<li>alphabet of 26+1 characters<br />
(capital letters + stop code #)</li>
<li>alphabet can be represented by <span class="math inline">2<sup>5</sup></span> values</li>
</ul>
</div>
<div class="col">
<pre><code>
'#' : 0x0 {0}
'A' : 0x1 {1}
'B' : 0x2 {2}
...
'Z' : 0x1a {26}
</code></pre>
</div>
</div>
</div>
</div>
</section><section id="lzw-1" class="slide level2">
<h2>LZW 1</h2>
<pre><code style="font-size: 1.25em">
TOBEORNOTTOBEORTOBEORNOT#
^
</code></pre>
<p> </p>
<div class="container-fluid">
<div class="row align-items-center">
<div class="col">
<ul>
<li>TO unknown, add to dict</li>
<li>T known, emit 20</li>
</ul>
</div>
<div class="col">
<p>written:</p>
<pre><code>
{20}
</code></pre>
<p>dictionary:</p>
<pre><code>
'#'  : 0x0  {0}
'A'  : 0x1  {1}
...
'T'  : 0x14 {20}
...
'Z'  : 0x1a {26}
'TO' : 0x1b {27}
</code></pre>
</div>
</div>
</div>
</section><section id="lzw-2" class="slide level2">
<h2>LZW 2</h2>
<pre><code style="font-size: 1.25em">
TOBEORNOTTOBEORTOBEORNOT#
 ^
</code></pre>
<p> </p>
<div class="container-fluid">
<div class="row align-items-center">
<div class="col">
<ul>
<li>OB unknown, add to dict</li>
<li>O known, emit 15</li>
</ul>
</div>
<div class="col">
<p>written:</p>
<pre><code>
{20}{15}
</code></pre>
<p>dictionary:</p>
<pre><code>
'#'  : 0x0  {0}
'A'  : 0x1  {1}
...
'T'  : 0x14 {20}
...
'TO' : 0x1b {27}
'OB' : 0x1c {28}
</code></pre>
</div>
</div>
</div>
</section><section id="lzw-3" class="slide level2">
<h2>LZW 3</h2>
<pre><code style="font-size: 1.25em">
TOBEORNOTTOBEORTOBEORNOT#
  ^
</code></pre>
<p> </p>
<div class="container-fluid">
<div class="row align-items-center">
<div class="col">
<ul>
<li>BE unknown, add to dict</li>
<li>B known, emit 2</li>
</ul>
</div>
<div class="col">
<p>written:</p>
<pre><code>
{20}{15}{2}
</code></pre>
<p>dictionary:</p>
<pre><code>
'#'  : 0x0  {0}
'A'  : 0x1  {1}
...
'B'  : 0x2  {2}
...
'OB' : 0x1c {28}
'BE' : 0x1d {29}
</code></pre>
</div>
</div>
</div>
</section><section id="lzw-4" class="slide level2">
<h2>LZW 4</h2>
<pre><code style="font-size: 1.25em">
TOBEORNOTTOBEORTOBEORNOT#
   ^
</code></pre>
<p> </p>
<div class="container-fluid">
<div class="row align-items-center">
<div class="col">
<ul>
<li>EO unknown, add to dict</li>
<li>E known, emit 5</li>
</ul>
</div>
<div class="col">
<p>written:</p>
<pre><code>
{20}{15}{2}{5}
</code></pre>
<p>dictionary:</p>
<pre><code>
'#'  : 0x0  {0}
'A'  : 0x1  {1}
...
'E'  : 0x5  {5}
...
'BE' : 0x1d {29}
'EO' : 0x1e {30}
</code></pre>
</div>
</div>
</div>
</section><section id="lzw-10" class="slide level2">
<h2>LZW 10</h2>
<pre><code style="font-size: 1.25em">
TOBEORNOTTOBEORTOBEORNOT#
         ^
</code></pre>
<p> </p>
<div class="container-fluid">
<div class="row align-items-center">
<div class="col">
<ul>
<li>TOB unknown, add to dict</li>
<li>TO known, emit 27</li>
<li><span class="class fragment highlight-red">1 symbol, 2 characters</span></li>
</ul>
</div>
<div class="col">
<p>written:</p>
<pre><code>
{20}{15}{2}{5}{15}{18}{14}{15}{20}{27}
</code></pre>
<p>dictionary:</p>
<pre><code>
'#'  : 0x0  {0}
'A'  : 0x1  {1}
...
'TE' : 0x1b {27}
...
'TT' : 0x23 {35}
'TOB': 0x24 {36}
</code></pre>
</div>
</div>
</div>
</section><section id="lzw-final" class="slide level2">
<h2>LZW Final</h2>
<pre><code>
TOBEORNOTTOBEORTOBEORNOT#
{20}{15}{2}{5}{15}{18}{14}{15}{20}{27}{29}{31}{36}{30}{32}{34}{0}
</code></pre>
<div class="fragment">
<p> </p>
<div class="container-fluid">
<div class="row align-items-top">
<div class="col-8">
<ul>
<li>original:<br />
25 symbols × 5 b/symbol = 125 b</li>
<li>encoded :<br />
(6 codes × 5 b/code) + (11 codes × 6 b/code) = <strong>96 b</strong></li>
</ul>
</div>
<div class="col-4">
<pre><code>
'#'  : 0x0  {0}
'A'  : 0x1  {1}
...
'EOR': 0x28 {40}
'RNO': 0x29 {41}
</code></pre>
</div>
</div>
</div>
</div>
</section><section id="lz4-and-friends" class="slide level2">
<h2>LZ4 and friends</h2>
<ul>
<li>upspur of new and fast compression libraries in the last years
<ul>
<li>lz4 by Yann Collet</li>
<li>zstd by Yann Collet (Facebook)</li>
<li><a href="https://github.com/google/brotli">brotli</a> by google ...</li>
</ul></li>
</ul>
<p><a href="https://quixdb.github.io/squash-benchmark/"><img src="img/squash-comparison.png" alt="quixdb.github.io/squash-benchmark" /></a></p>
<aside class="notes">
<ul>
<li>squash: largest dataset = 95MB text</li>
</ul>
</aside>
</section><section id="on-our-16bit-data" class="slide level2">
<h2>On our 16bit data?</h2>
<p>lz4</p>
<pre><code>
/dev/shm $ time lz4 spim_sample.tif                              
Compressed filename will be : mit_sample.tif.lz4 
Compressed 423637504 bytes into 302613798 bytes ==> 71.43%                     
lz4 spim_sample.tif  1.28s user 0.18s system 99% cpu 1.470 total
</code></pre>
<p>405MB file, 289MB encoded, <span class="class fragment highlight-red">316 MB/s</span> ingest</p>
<div class="fragment">
<p> </p>
<p>zstd</p>
<pre><code>
/dev/shm $ time zstd spim_sample.tif
mit_sample.tif       : 44.11%   (423637504 => 186867090 bytes, mit_sample.tif.zst) 
zstd spim_sample.tif  3.96s user 0.16s system 104% cpu 3.936 total
</code></pre>
<p>405MB file, 179MB encoded, <span class="class fragment highlight-red">102 MB/s</span> ingest</p>
<aside class="notes">
<ul>
<li>speed versus compression ratio trade-off</li>
<li>requirements are high!</li>
<li>16bit data (yields gaps)</li>
<li>NEXT: compression+preprocessing</li>
</ul>
</aside>
</div>
</section></section>
<section><section id="sqeazy" class="titleslide slide level1"><h1>Sqeazy</h1></section><section id="requirements" class="slide level2">
<h2>Requirements</h2>
<div class="container-fluid">
<div class="row justify-content-center">
<div class="col">
<ul>
<li>provide compression at 500 MB/s or more</li>
<li>target:
<ul>
<li>lossless: 3x or more</li>
<li>lossy: 10x or more</li>
</ul></li>
<li>flexible pipeline definition</li>
<li>support video codecs (<a href="https://www.videolan.org/developers/x264.html">x264</a>, <a href="http://x265.readthedocs.io/en/default/">x265</a>)</li>
<li>support community file formats like <a href="https://www.hdfgroup.com">HDF5</a></li>
</ul>
</div>
<div class="col">
<ul>
<li>support 16 and 8-bit data types</li>
<li>multi-core</li>
<li>x86</li>
<li>Linux, macOS and <em>Win7</em></li>
<li>redistributable binary</li>
<li>interface to Java</li>
</ul>
</div>
</div>
</div>
<div class="fragment">
<p><span class="class" style="font-size: 1.5em; color: yellow;"><strong>Good Luck!</strong></span></p>
<aside class="notes">
<ul>
<li>NEXT: why pipelines?</li>
</ul>
</aside>
</div>
</section><section id="bitshuffle" class="slide level2">
<h2>Bitshuffle</h2>
<p>Original (6 pixel values of 16 bit)</p>
<pre><code>
                9                 1                 2                12             56013             36742
00000000 00001001 00000000 00000001 00000000 00000010 00000000 00001100 11011010 11001101 10001111 10000110
</code></pre>
<p>Bitplane 0</p>
<pre><code>
                9                 1                 2                12             56013             36742
00000000 00001001 00000000 00000001 00000000 00000010 00000000 00001100 11011010 11001101 10001111 10000110
^                 ^                 ^                 ^                 ^                 ^
-> 000011
</code></pre>
<p>Bitplane 15</p>
<pre><code>
                9                 1                 2                12             56013             36742
00000000 00001001 00000000 00000001 00000000 00000010 00000000 00001100 11011010 11001101 10001111 10000110
                ^                 ^                 ^                 ^                 ^                 ^
-> 110010
</code></pre>
</section><section id="pipelining" class="slide level2">
<h2>Pipelining</h2>
<p>On the command-line:</p>
<pre><code>
$ sqy encode -p 'bitswap1->lz4' my.tif
</code></pre>
<p>From Java:</p>
<pre><code>
final Pointer<Byte> bPipelineName = Pointer.pointerToCString("bitswap->lz4");
SqeazyLibrary.SQY_PipelineEncode_UI16(bPipelineName,lSourceBytes,
                                      lSourceShape,3,
                                      lCompressedBytes,lPointerToDestinationLength,
                                      1)
</code></pre>
<p>Internal C++:</p>
<pre><code>
auto pipe = sqeazy::dynamic_pipeline<std::uint16_t>::from_string("bitswap1->lz4");
char* encoded_end = pipe.encode(input.data(),
                                encoded.data(),
                                shape);
</code></pre>
<p>original: 140MB, lz4-only: 114MB, bitshuffle+lz4: 60MB</p>
<aside class="notes">
<ul>
<li>pipelines important to reshape/filter data</li>
<li></li>
</ul>
</aside>
</section><section id="sqeazy-pipelines" class="slide level2">
<h2>Sqeazy Pipelines</h2>
<pre><code>
template <
    typename raw_t,
    template<typename = raw_t> class filter_factory_t = default_filter_factory,
    typename inbound_sink_factory_t = default_sink_factory<raw_t>,
    typename optional_tail_factory_t = void
    >
  struct dynamic_pipeline
{

    std::vector<std::shared_ptr<base_stage<raw_t> > > stages;

}
</code></pre>
<aside class="notes">
<ul>
<li>first attempt: static pipelines with Boost.MTL</li>
<li>pipeline object checks if stages fit</li>
<li>KISS</li>
<li>NEXT: Temporaries</li>
</ul>
</aside>
</section><section id="a-need-for-temporaries" class="slide level2">
<h2>A Need for Temporaries?</h2>
<pre><code>
out_type* dynamic_pipeline::encode(const in_type* raw, out_type* encoded, shape_t shape){

   header_t hdr(in_type(), shape, this->name());
   char* start_here = std::copy(hdr.c_str(),hdr.c_str()+hdr.size(),
                                    static_cast<char*>(encoded));
                                    
   for( stage_t stage : stages ){
   
        stage.encode(raw,encoded,shape);
        std::swap(raw,encoded);
   
   }

}
</code></pre>
<aside class="notes">
<ul>
<li>rough draft of core functionality</li>
<li>problem: output never of constant size ( encoder overhead, meta data )</li>
<li>allocating temporaries consumes resources</li>
</ul>
</aside>
</section><section id="latency-hiding" class="slide level2">
<h2>Latency Hiding</h2>
<pre><code>
template <typename T>
using unique_array = std::unique_ptr<T[], boost::alignment::aligned_delete>;

out_type* dynamic_pipeline::encode(const in_type* raw, out_type* encoded, shape_t shape){

   std::future<unique_array<incoming_t>> temp = std::async(make_aligned<incoming_t>,
                                                           std::size_t(32),
                                                           scratchpad_bytes);

   header_t hdr(in_type(), shape, this->name());
   char* start_here = std::copy(hdr.c_str(),hdr.c_str()+hdr.size(),
                                    static_cast<char*>(encoded));
   
   encoded = temp.get();
   for( int s = 0; s< stages.size();++s){
   
        stage.encode(raw,encoded,shape);
        std::swap(raw,encoded);
   
   }

}
</code></pre>
<aside class="notes">
<ul>
<li>overhead of allocations mitigated</li>
<li>pipeline that does nothing ~ memcpy speed</li>
<li>HERE: coding with performance</li>
<li>NEXT: performance</li>
</ul>
</aside>
</section></section>
<section><section id="portable-performance" class="titleslide slide level1"><h1>Portable Performance</h1></section><section id="perspectives-and-illusions" class="slide level2">
<h2>Perspectives and illusions</h2>
<div class="container-fluid">
<div class="row align-items-center">
<div class="col">
<figure>
<img src="img/737px-My_Wife_and_My_Mother-in-Law.jpg" alt="My Wife and My Mother-in-Law" class="img-fluid" style="width: 60%;" /><figcaption><a href="https://commons.wikimedia.org/wiki/File:My_Wife_and_My_Mother-in-Law.jpg">My Wife and My Mother-in-Law</a></figcaption>
</figure>
</div>
<div class="col">
<p>Portable Performance as <strong>same performance on every system</strong> is <span class="class fragment highlight-red">impossible</span></p>
<ul>
<li>cache level volume(s) depends on price</li>
<li>memory system changes (bytes per flops)</li>
<li>clock counts, turbo boosts</li>
<li>instruction sets available</li>
<li>installed runtime library versions</li>
</ul>
</div>
</div>
</div>
<aside class="notes">
<ul>
<li>ignore real-time hardware for now</li>
<li>focus on x86</li>
<li>very hardware centered view</li>
<li>domain metrics <em>often</em> less sensitive</li>
<li>NEXT: way out</li>
</ul>
</aside>
</section><section id="manage-expectations" class="slide level2">
<h2>Manage Expectations</h2>
<div class="container-fluid">
<div class="row align-items-center">
<div class="col">
<figure>
<img src="img/expectations.jpg" alt="CC0" class="img-fluid" style="width: 60%;" /><figcaption>CC0</figcaption>
</figure>
</div>
<div class="col">
<p>Honest Performance</p>
<ul>
<li>communicate hardware requirements</li>
<li>speak in units of the domain (e.g. images per second, pixels per second)</li>
<li>give ranges (e.g. algorithm can compress from 0.95 to 3x on our test data)</li>
<li>provide reproducible benchmarks (at best which can be run by user)</li>
</ul>
</div>
</div>
</div>
</section><section id="adaptive-algorithms" class="slide level2">
<h2>Adaptive Algorithms?</h2>
<div class="container-fluid">
<div class="row align-items-center">
<div class="col">
<figure>
<img src="img/proper_tools.jpg" alt="CC0" class="img-fluid" style="width: 60%;" /><figcaption><a href="https://commons.wikimedia.org/wiki/File:%22USE_PROPER_TOOLS_FOR_THE_JOB_-_TAKE_CARE_OF_THEM%22_-_NARA_-_515954.jpg">CC0</a></figcaption>
</figure>
</div>
<div class="col">
<p>From <a href="http://python-blosc.blosc.org/tutorial.html#fine-tuning-compression-parameters">blosc tutorial</a>:</p>
<blockquote>
<p>Often the L2 cache size (e.g. 256kB for an Intel Haswell) is a good starting point for optimization.</p>
</blockquote>
</div>
</div>
</div>
<aside class="notes">
<ul>
<li>user based blocksize setting not necessary</li>
<li>implementations should be clever enough</li>
<li>NEXT: compass</li>
</ul>
</aside>
</section><section id="compass" class="slide level2">
<h2><a href="https://github.com/psteinb/compass">compass</a></h2>
<div class="container-fluid">
<div class="row align-items-top">
<div class="col">
<ul>
<li>single-header library (thanks to <a href="https://github.com/ned14/pcpp">pcpp</a>)</li>
<li>easy drop-in to your project</li>
<li>detect hardware features at runtime</li>
</ul>
</div>
<div class="col">
<ul>
<li>detect (some) compile-time features</li>
<li>enables sensible hardware specific defaults</li>
<li>no dependencies</li>
</ul>
</div>
</div>
</div>
<p> </p>
<figure>
<img src="img/compass-repo.png" alt="github.com/psteinb/compass" class="img-fluid" style="width: 80%;" /><figcaption><a href="https://github.com/psteinb/compass">github.com/psteinb/compass</a></figcaption>
</figure>
</section><section id="compass-features" class="slide level2">
<h2>compass features</h2>
<pre><code class="line-numbers" data-highlight-lines=2>
static const bool has_sse2 = compass::compiletime::has&lt;compass::feature::sse2>::value);
if(has_sse2)
{
  do_magic_with_sse2();
}
</code></pre>
<pre><code>
auto has_avx2 = compass::runtime::has(compass::feature::avx2());
if(has_avx2)
{
  do_magic_with_avx2();
}
</code></pre>
<div class="fragment">
<pre><code>
auto L2_in_kb = compass::runtime::size::cache::level(2);
foo.set_blocksize(L2_in_kb*.75)
</code></pre>
</div>
</section><section id="compassbench" class="slide level2" style="font-size: 1.5em">
<h2>compass benchmark</h2>
<pre><code>
Run on (4 X 3600 MHz CPU s)
2018-05-14 17:37:29
***WARNING*** CPU scaling is enabled, the benchmark real time ...
--------------------------------------------------------------
Benchmark                       Time           CPU Iterations
--------------------------------------------------------------
BM_compass_sse4_1              31 ns         31 ns   22705074
BM_cpu_features_sse4_1        242 ns        241 ns    2870098
</code></pre>
<p> </p>
<p>Competition (<a href="https://github.com/google/cpu_features">google/cpu_features</a>) is hard, but not unbeatable!</p>
</section><section id="compassbench" class="slide level2" style="font-size: 1.5em">
<h2>compass lessons learned</h2>
<ul>
<li>gcc/clang yield similar APIs</li>
<li>MSVC hard to control target hardware</li>
<li>MSVC hardly communicates compile targets in preprocessor flags</li>
<li>what the intel manual says != reality in many cases (detecting physical cores)</li>
<li>would love to see more introspection activity (free memory, current CPU load)</li>
</ul>
<!-- ## Background estimation -->
<!-- 1. estimate median and variance of noise -->
<!-- 2. reduce all pixels by (mean+1*variance) -->
<!-- 3. clamp all negative intensities to 0 -->
<!-- ** how many samples to collect for median/variance ? ** -->
<!-- :notes[ -->
<!-- - algorithm provides minimal loss -->
<!-- - can boost compression ratio to 15x -->
<!-- - options: fixed number of pixels, adapt to host at runtime -->
<!-- - NEXT: compass -->
<!-- :] -->
<aside class="notes">
<ul>
<li>good infrastructure</li>
<li>NEXT: good tools</li>
</ul>
</aside>
</section><section id="perf-reloaded-with-flamegraphs" class="slide level2">
<h2><a href="https://perf.wiki.kernel.org/index.php/Main_Page">perf</a> Reloaded with <a href="https://github.com/brendangregg/FlameGraph">FlameGraphs</a></h2>
<div class="container-fluid">
<div class="row align-items-center">
<div class="col-8">
<pre><code>
$ perf record -g ./my-slow-binary
[ perf record: Woken up 1 times to write data ]
[ perf record: Captured and wrote 0.023 MB perf.data (75 samples) ]
$ perf script > out.perf
$ ./stackcollapse-perf.pl out.perf > out.folded
$ ./flamegraph.pl out.folded > perf_samples.svg
</code></pre>
</div>
<div class="col-4">
<ul>
<li>visualisation technique conceived by <a href="https://github.com/brendangregg">Brendan Gregg</a> (Netflix)</li>
<li>seamless integration into perf, dtrace, systemtap, XCode Instruments, Lightweight Java Profiler, Microsoft Visual Studio profiles, ...</li>
<li>based on collected counter samples and the stacktrace they were collected in</li>
</ul>
</div>
</div>
</div>
</section><section id="ethereum-mining-as-flamegraph" class="slide level2">
<h2>Ethereum Mining <a href="img/ethminer-cuda-simulate.svg">as FlameGraph</a></h2>
<div class="container-fluid">
<div class="row align-items-center">
<div class="col">
<p><object type="image/svg+xml" data="img/ethminer-cuda-simulate.svg" width="90%"> Your browser does not support SVG </object></p>
</div>
</div>
</div>
<div class="container-fluid">
<div class="row align-items-start">
<div class="col">
<ul>
<li>(x axis) current stack level in alphabetical order</li>
</ul>
</div>
<div class="col">
<ul>
<li>(y axis) number of samples in that stacktrace level</li>
</ul>
</div>
</div>
</div>
<aside class="notes">
<ul>
<li>alphetical ordering inside each stacktrace level</li>
</ul>
</aside>
</section><section id="flamegraphs-available-near-you" class="slide level2">
<h2>flamegraphs available near you</h2>
<p>show UIforETW</p>
</section><section id="parallelisation" class="slide level2">
<h2>parallelisation</h2>
</section><section id="state-of-cross-platform-implicit-concurrency-in-c" class="slide level2">
<h2>state of cross-platform implicit concurrency in C++</h2>
</section><section id="c17" class="slide level2">
<h2>C++17</h2>
</section><section id="c20-cancellable-tasks" class="slide level2">
<h2>C++20 cancellable tasks</h2>
</section></section>
<section><section id="summary" class="titleslide slide level1"><h1>Summary</h1></section></section>
      </div>
    </div>


    <script src="lib/js/head.min.js"></script>
    <script src="js/reveal.js"></script>

    <script>

      // Full list of configuration options available here:
      // https://github.com/hakimel/reveal.js#configuration
      Reveal.initialize({
      controls: false,
      progress: true,
      history: true,
      center: true,
      
      slideNumber: true,
      // The "normal" size of the presentation, aspect ratio will be preserved
      // when the presentation is scaled to fit different resolutions. Can be
      // specified using percentage units.
      width: 1920,
      height: 1080,

      // Factor of the display size that should remain empty around the content
      margin: 0.01,

      // Bounds for smallest/largest possible scale to apply to content
      minScale: 0.2,
      maxScale: 1.5,

      transition: 'slide', // none/fade/slide/convex/concave/zoom

      backgroundTransition: 'fade', // default/cube/page/concave/zoom/linear/fade/none

      // Optional libraries used to extend on reveal.js
      dependencies: [
      //{ src: 'lib/js/classList.js', condition: function() { return !document.body.classList; } },
      { src: 'plugin/highlight/highlight.js', async: true, callback: function() { hljs.initHighlightingOnLoad(); } },
      { src: 'plugin/zoom-js/zoom.js', async: true, condition: function() { return !!document.body.classList; } },
      { src: 'plugin/notes/notes.js', async: true },
      { src: 'plugin/line-numbers/line-numbers.js' }
      //          { src: 'plugin/search/search.js', async: true, condition: function() { return !!document.body.classList; }, }
      //          { src: 'plugin/remotes/remotes.js', async: true, condition: function() { return !!document.body.classList; } }
      ]});
    </script>
      </body>
</html>
